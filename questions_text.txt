5.Adim: Git nedir? VCS Acilimi nedir? Iyi bir commitin ozellikleri nelerdir. 

Git: versiyon kontrol sistemidir. Gelistiricilerin uygulama gelistirirken olusan degisiklikleri kayit etme ve kontrol etme sistemidir. 

Iyi commit ozellikleri: Yapilan degisiklikler anlamli bir not ile yapilmalidir. Uygulama gelistiriken sik bir sekilde commitlenmeli buyuk degisiklikler yapilmadan kucuk kucuk degisiklikler yapilmaldir. Kodlar surekli olarak  test edilerek commitlenmesi gelecek guncellemer acisindan sorunsuz ilerlemesini saglar. 
------------------------------------------------------------------------------------------------------------------------------------------

7.adim: Git staged area ve unstaged area nedir ? 

Unstaged area: calismalarimizi yaptigimiz ama daha commit etmedigimiz kisimdir. Degisiklikler localde depolanmamis editorde calisamya devam ettigimiz alan da denebilir.\ 

Staged area: commit yaptigimiz ve pushlamaya hazir oldugumuz localimizdeki degisiklikleri kaydettigimiz yerdir. 
------------------------------------------------------------------------------------------------------------------------------------------

11. Adim:git log ve git status ne iş yapıyordu. 

Git log: bizim repomuzda yaptigimiz commitlerle ilgili kaydini tutar 

Git statu: O anki calismamizin durmunu hangi branchte oldugumnzu vs gibi durumlari soyler. 
------------------------------------------------------------------------------------------------------------------------------------------

13.adim: Git GUI ve Git CLI nedir? 

Git gui: git depolarindaki repolari yonetmek icin kullanilan kodlarin grafik arayuzu ile kullanilan uygulamasidir. 

Git cli: kodlar ile git depolarini  yonetmemizi saglayan grafik arayuzu olmayan kisimdir. 
------------------------------------------------------------------------------------------------------------------------------------------

16.adim: git stash nedir ? 

Uzerinde calistigimiz konu disinda baska bir konuya gecmek ama calistigimizi da kaybetmnemek icin kullandigimiz ozelliktir. Git stash ile commit etmek istemedigimiz ama kayip etmek istemedigimiz calismalari on bellekde tutabiliyoruz. 
------------------------------------------------------------------------------------------------------------------------------------------

19.adim: Rebesa ile merge arasındaki fark nedir ? 

Branchleri bir araya getiren iki farkli yontemdir. 

Rebesa: brenchleri dogrusal bir tarih olusturarak yeniden yazar.  

Merge: branchleri birlestirerek yeni bir yeni bir merge commit olusturur. Brenchlerin gecmisini korur 
------------------------------------------------------------------------------------------------------------------------------------------

20.adim: Git Conflict nedir ? Bir conflict yediğimizde ne yapmamız gerekiyor ? 

Git conflict: Birden fazla commit ayni dosyadaki ayni satiridegistirmis oldugunda meydana gelir. 

Git status gkullanilarak hangi dosyada sorun meyadan geldigine bakalir. Hangi commitin gonderilecegeni secmemiz ve digerinin silinmesi gerekir bu ioslemler yapilinca pushlama islemimiz yapilabilir. 

------------------------------------------------------------------------------------------------------------------------------------------
21.adim: git ignore nedir ? 

Api key gibi uniq ve sadece ozel kullanim icin sunulan dosyalarin uzak depoya gonderilmesini engellemek icin kullanilan git dosyasidir. 

 ------------------------------------------------------------------------------------------------------------------------------------------

22.adim: git tag v1.1 ? Bu komu ne iş yapar ? 

Bu komut ile yaptimiz commitlerin bir nickinin olmasini saglar. Boylelikle versiyon gibi ayrimlari yapmak kolaylasir 
------------------------------------------------------------------------------------------------------------------------------------------

 23. git diff commit1 commit2 bu komu ne iş yapar 

iki commit arasidnaki farklari gosterir.
------------------------------------------------------------------------------------------------------------------------------------------

24.DevOps kültür felsefesi nedir ?

gelistirici ekipleri ile operasyon ekiplerinin isbirligine dayali olan yazilim gelistirme, test ve deployment sureclerini optimum duruma
getirip guvenilir, hizli ve yuksek kaliteli ortam sunan bakis acisidir.

Urun uretimi yani sira ekipler arasi iyi iliskileri de guclendirerek hosgorulu ve verimli bir ortam saglar. 

------------------------------------------------------------------------------------------------------------------------------------------

25.DevOps açılımı ?(24 ile 25 sorular degisin)

Development ve operasyon kelimelerinin kisaltilmasi ile olusur.

------------------------------------------------------------------------------------------------------------------------------------------

26.adım: DevOps Yöntemlerinden Continous Integration/Continoues Delivery-Deployment süreçler hakkında bildilerimizi yazalım.

Devops  arastirmalari yapildigidna ilk aklimiza gelen olgi CI(Continoues Integration) ve Cd (Continoues Deployment) harflerinnin
karsimizia cikardigi CI/CD  harf obegidir. 

Continous Integration: Gelistirme ortamlarinda surekli olarak gelistirilen uygulamalarin test edilmesi ve dogrulanmasi gerekmektedir.
Bu durumu otomatik hale getirmek CI kismini olusturur.

Continoues Deployment: Testleri gecen urunlerin dagitilip canliya aktarilmasinin otomatiklestirilmesi de CD bolumunu olusturmaktadir.
